00000000 A _Min_Heap_Size
00000400 A _Min_Stack_Size
08000000 R g_pfnVectors
08000188 t __do_global_dtors_aux
080001ac t frame_dummy
080001f4 T memcpy
08000328 T send_string
08000350 T encrypt_can_packet
080004c4 T decrypt_can_packet
08000638 T send_can_packet
08000694 T read_can_packet
08000710 T setup
0800072c T setup_led
08000784 T master_stm_loop
0800082c T main
08000864 t print_can_error
080008c0 T MX_CAN_Init
080009a8 t Error_Handler
080009b0 T HAL_CAN_MspInit
08000a1c t can_return_error
08000a5c T write_can
08000b28 T read_can
08000b9c T platform_init
08000be8 T init_uart
08000c9c T trigger_setup
08000cf4 T putch
08000d20 T HAL_GetTick
08000d3c T HAL_RCC_GetSysClockFreq
08000d50 T HAL_RCC_GetPCLK1Freq
08000d64 T HAL_RCC_OscConfig
08001b38 T HAL_RCC_ClockConfig
08001e38 T HAL_RCC_GetPCLK2Freq
08001e4c T HAL_GPIO_Init
08002148 T HAL_GPIO_WritePin
08002178 T UART_SetConfig
08002574 T UART_CheckIdleState
08002606 T HAL_UART_Init
08002694 T UART_WaitOnFlagUntilTimeout
08002728 T HAL_UART_Transmit
08002842 T HAL_CAN_Init
08002a6a T HAL_CAN_ConfigFilter
08002c08 T HAL_CAN_DeInit
08002c42 W HAL_CAN_MspDeInit
08002c58 T HAL_CAN_Transmit
08002f88 T HAL_CAN_Receive
08003208 T SystemInit
0800329c t getSBoxValue
080032bc t KeyExpansion
08003460 t AddRoundKey
080034d8 t SubBytes
08003538 t ShiftRows
080035f0 t xtime
0800362c t MixColumns
080037c0 t Cipher
0800380c T AES128_ECB_indp_setkey
0800382c T AES128_ECB_indp_crypto
0800384c T aes_indep_init
0800385a T aes_indep_key
08003870 T aes_indep_enc
08003888 W Reset_Handler
0800388c t CopyDataInit
08003894 t LoopCopyDataInit
080038a2 t FillZerobss
080038a8 t LoopFillZerobss
080038ba t LoopForever
080038d0 W BusFault_Handler
080038d0 W DebugMon_Handler
080038d0 T Default_Handler
080038d0 W HardFault_Handler
080038d0 t Infinite_Loop
080038d0 W MemManage_Handler
080038d0 W NMI_Handler
080038d0 W PendSV_Handler
080038d0 W SVC_Handler
080038d0 W SysTick_Handler
080038d0 W UsageFault_Handler
080038d4 T __libc_init_array
08003924 T memcmp
08003984 t register_fini
08003998 T atexit
080039a4 T __libc_fini_array
080039d8 T __retarget_lock_acquire_recursive
080039dc T __retarget_lock_release_recursive
080039e0 T __register_exitproc
08003aa4 t __EH_FRAME_BEGIN__
08003aa4 T _init
08003ab0 T _fini
08003abc T _etext
08003bd8 R _global_impure_ptr
08003bdc ? __exidx_end
08003bdc ? __exidx_start
08003bdc t __init_array_start
08003bdc d __preinit_array_end
08003bdc d __preinit_array_start
08003be0 t __frame_dummy_init_array_entry
08003be4 t __do_global_dtors_aux_fini_array_entry
08003be4 t __fini_array_start
08003be4 t __init_array_end
08003be8 t __fini_array_end
08003be8 A _sidata
20000000 D _sdata
20000000 D Kenc
20000010 D Kauth
20000020 D IV
20000030 D sbox
20000130 D rsbox
20000230 D Rcon
20000240 d impure_data
20000668 D __atexit_recursive_mutex
2000066c B __bss_start__
2000066c D _edata
2000066c B _sbss
2000066c b completed.9790
20000670 b object.9795
20000688 b myhcan
200006c8 b msg
200006e4 b RxMessage
20000708 b state
2000070c b RoundKey
200007bc b Key
200007c0 B UartHandle
20000830 B hal_sys_tick
20000834 B __lock___atexit_recursive_mutex
20000838 B __lock___arc4random_mutex
2000083c B __lock___env_recursive_mutex
20000840 B __lock___sinit_recursive_mutex
20000844 B __lock___malloc_recursive_mutex
20000848 B __lock___at_quick_exit_mutex
2000084c B __lock___dd_hash_mutex
20000850 B __lock___tz_mutex
20000854 B __lock___sfp_recursive_mutex
20000858 B __bss_end__
20000858 B _ebss
20000858 B end
20003000 A _estack
f1e0f85f a BootRAM
